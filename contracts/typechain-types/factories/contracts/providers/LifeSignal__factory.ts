/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LifeSignal,
  LifeSignalInterface,
} from "../../../contracts/providers/LifeSignal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeout",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCheck",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPing",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum LifeSignal.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "user",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034607a57601f61041838819003918201601f19168301916001600160401b03831184841017607f578084926040948552833981010312607a5760208151910151903360018060a01b03196000541617600055426001556002556003554260045560ff196005541660055560405161038290816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163200d2ed21461029a575080632760c57e1461027c5780634585e33b146102225780634f8632ba146101f95780635c36b1861461018c5780636e04ff0d146100e157806370dea79a146100c3578063947a36fb146100a55763d2eae1b41461008257600080fd5b346100a05760003660031901126100a0576020600454604051908152f35b600080fd5b346100a05760003660031901126100a0576020600254604051908152f35b346100a05760003660031901126100a0576020600354604051908152f35b346100a0576100ef366102d8565b50506100fd60045442610329565b600254106040516020810181811067ffffffffffffffff8211176101765760405260008152604051918252604060208301528181519182604083015260005b83811061015e5750508160006060809484010152601f80199101168101030190f35b6020828201810151606087840101528593500161013c565b634e487b7160e01b600052604160045260246000fd5b346100a05760003660031901126100a0576000546001600160a01b031633036101bf57426001556005805460ff19169055005b60405162461bcd60e51b81526020600482015260126024820152714f6e6c7920757365722063616e2070696e6760701b6044820152606490fd5b346100a05760003660031901126100a0576000546040516001600160a01b039091168152602090f35b346100a057610230366102d8565b505061023e60045442610329565b6002541061024857005b4260045561025860015442610329565b6003541015610270576005805460ff19166001179055005b60ff1960055416600555005b346100a05760003660031901126100a0576020600154604051908152f35b346100a05760003660031901126100a05760ff600554169060028210156102c2576020918152f35b634e487b7160e01b600052602160045260246000fd5b9060206003198301126100a05760043567ffffffffffffffff81116100a057826023820112156100a05780600401359267ffffffffffffffff84116100a057602484830101116100a0576024019190565b9190820391821161033657565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab57224e8c34984595abf6231477ef968411ae7a34e281fef0b0e957abbee5e464736f6c634300081c0033";

type LifeSignalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LifeSignalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LifeSignal__factory extends ContractFactory {
  constructor(...args: LifeSignalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _interval: BigNumberish,
    _timeout: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_interval, _timeout, overrides || {});
  }
  override deploy(
    _interval: BigNumberish,
    _timeout: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_interval, _timeout, overrides || {}) as Promise<
      LifeSignal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LifeSignal__factory {
    return super.connect(runner) as LifeSignal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LifeSignalInterface {
    return new Interface(_abi) as LifeSignalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LifeSignal {
    return new Contract(address, _abi, runner) as unknown as LifeSignal;
  }
}
